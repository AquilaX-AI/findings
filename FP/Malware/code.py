import socket
import requests
import threading
from datetime import datetime

TARGETS = ["192.168.1.1", "192.168.1.2"] 
PORTS = [21, 22, 23, 80, 443, 8080] 
TIMEOUT = 5
LOG_FILE = "vulnerability_scan.log"

VULNERABILITIES = {
    21: "FTP Service - Check for anonymous login",
    22: "SSH Service - Ensure strong credentials",
    23: "Telnet Service - Deprecated, replace with SSH",
    80: "HTTP - Check for outdated software",
    443: "HTTPS - Ensure TLS is up to date",
    8080: "Web Interface - Check for default credentials"
}

def scan_target(ip):
    results = []
    print(f"[+] Scanning {ip}...")
    
    for port in PORTS:
        try:
            with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
                s.settimeout(TIMEOUT)
                result = s.connect_ex((ip, port))
                if result == 0:
                    message = f"[OPEN] {ip}:{port} - {VULNERABILITIES.get(port, 'Unknown Service')}"
                    print(message)
                    results.append(message)
        except Exception as e:
            print(f"[ERROR] {ip}:{port} - {e}")

    log_results(ip, results)

def log_results(ip, results):
    with open(LOG_FILE, "a") as f:
        f.write(f"\n[SCAN] {datetime.now()} - {ip}\n")
        for result in results:
            f.write(result + "\n")
    print(f"[+] Results saved to {LOG_FILE}")

if __name__ == "__main__":
    threads = []
    for target in TARGETS:
        thread = threading.Thread(target=scan_target, args=(target,))
        thread.start()
        threads.append(thread)
    
    for thread in threads:
        thread.join()
    print("[+] Scan complete.")