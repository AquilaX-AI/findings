import socket
import threading
import random
import urllib.request
import time

USER_AGENTS = [
    "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
    "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
    "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36",
    "Mozilla/5.0 (iPhone; CPU iPhone OS 14_6 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/14.1.1 Mobile/15E148 Safari/604.1"
]

URL = "https://example.com" 
THREADS = 50  
REQUESTS_PER_THREAD = 10 

def test_response_time(thread_id):
    headers = {"User-Agent": random.choice(USER_AGENTS)}
    
    for i in range(REQUESTS_PER_THREAD):
        start_time = time.time()
        
        try:
            req = urllib.request.Request(URL, headers=headers)
            with urllib.request.urlopen(req) as response:
                response.read()
                elapsed_time = time.time() - start_time
                print(f"Thread {thread_id}: Response Time = {elapsed_time:.2f}s")
        except Exception as e:
            print(f"Thread {thread_id}: Failed to fetch {URL}. Error: {e}")

def start_testing():
    threads = []
    
    print(f"Starting Performance Test for {URL} with {THREADS} threads...")
    
    for i in range(THREADS):
        thread = threading.Thread(target=test_response_time, args=(i,))
        threads.append(thread)
        thread.start()
    
    for thread in threads:
        thread.join()

    print("Performance Completed.")

if __name__ == "__main__":
    start_testing()
